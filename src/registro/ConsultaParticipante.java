
//LIBRERIAS QUE VAMOS A USAR
package registro;
import com.mysql.jdbc.ResultSet;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;


/**
 *
 * @author PEDRO IRVIN GRACIANO HERNANDEZ - 13-2262 @UNPHU @INTRO-LENG-JAVA
 */
public class ConsultaParticipante extends javax.swing.JFrame {
    //DECLARANDO VARIABLES
   Connection con = null;
   Statement stmt = null;
   String titulos[] = {"Codigo","Nombres","Apellidos","Genero","Celular","Telefono","Email","Direccion"};
   String fila[] = new String [8];
   DefaultTableModel modelo;


    /** Creates new form ConsultaParticipante */
    public ConsultaParticipante() {
        initComponents();
        // ESTABLECER QUE EL ESTADO DEL FORMULARIO CUANDO ABRE SEA MAXIMAZADO VERTICALMENTE
        this.setExtendedState(MAXIMIZED_VERT);
        //ESTABLECER EL TITULO DEL FORMULARIO
        this.setTitle("Consulta de participantes");
        //LOCALIZACION EN LA PANTALLA "QUE SERIAN LOS EJES X - Y"
        this.setLocation(0,0);
        //PARA EVITAR QUE AMPLIEN EL FORMULARIO Y ARRUINEN SU ESTATICA
        this.setResizable(false);
        //PARA INDICAR LA RUTA DE DONDE BUSCARA LA IMAGEN QUE USAREMOS COMO ICONO DEL FORMULARIO
        ImageIcon icono = new ImageIcon("C:\\Users\\mrped\\Desktop\\Practica Final\\src\\Imagenes\\inventory_category2.png");
        //PARA ESTABLECER QUE EL ICONO DEL FORMULARIO SEA UNA IMAGEN
        this.setIconImage(icono.getImage());
        
        try {
            //CONFIGURACIONES DE LA BASE DE DATOS MYSQL
            String url = "jdbc:mysql://localhost:3306/final13-2262";
            String usuario = "root";
            String contraseña = "12345";  
            
               Class.forName("com.mysql.jdbc.Driver").newInstance();
               con = DriverManager.getConnection(url,usuario,contraseña);
               if (con!= null)
                   System.out.println("SE HA EXTABLECIDO CONEXION CON LA BASE DE DATOS"+"\n"+url);
               
               stmt = con.createStatement();
               ResultSet rs = (ResultSet) stmt.executeQuery("select* from participante");
               
               modelo = new DefaultTableModel(null,titulos);
            
               while(rs.next()) {
                   //DONDE HACEMOS EL GET EN LA BASE DE DATOS E INDICAMOS CUALES SON LOS CAMPOS DE LA TABLA
                   fila[0] = rs.getString("codigo");
                   fila[1] = rs.getString("nombres");
                   fila[2] = rs.getString("apellidos");
                   fila[3] = rs.getString("genero");
                   fila[4] = rs.getString("celular");
                   fila[5] = rs.getString("telefono");
                   fila[6] = rs.getString("email");
                   fila[7] = rs.getString("direccion");
                   
                   modelo.addRow(fila); 
               // ESTABLECIENDO DONDE EL GET VA A PONER LOS DATOS E INDICANDO QUE MODELO DE TABLA SERA Y LOS ANCHOS
               }
               tabla_participantes.setModel(modelo);
                TableColumn co = tabla_participantes.getColumn("Codigo");
                co.setMaxWidth(50);
                TableColumn nom = tabla_participantes.getColumn("Nombres");
                nom.setMaxWidth(165);
                TableColumn ap = tabla_participantes.getColumn("Apellidos");
                ap.setMaxWidth(160);
                TableColumn gen = tabla_participantes.getColumn("Genero");
                gen.setMaxWidth(159);
                TableColumn cell = tabla_participantes.getColumn("Celular");
                cell.setMaxWidth(140);
                TableColumn tel = tabla_participantes.getColumn("Telefono");
                tel.setMaxWidth(150);
                TableColumn mail = tabla_participantes.getColumn("Email");
                mail.setMaxWidth(150);
                TableColumn dir = tabla_participantes.getColumn("Direccion");
                dir.setMaxWidth(400);
               
        }
        catch (Exception e) {
            //LA EXCEPCION DE SI NO CONECTA CON LA BASE DE DATOS DA UN ERROR
            JOptionPane.showMessageDialog(null,"ERROR AL CONSULTAR LA BASE DE DATOS");
        }    
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_participantes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);

        tabla_participantes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabla_participantes.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        tabla_participantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        jScrollPane1.setViewportView(tabla_participantes);

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Consulta de los participantes");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jMenu3.setText("Archivo");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Registro");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar2.add(jMenu3);

        jMenu4.setText("Salir");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1338, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 470, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //CERRAR FORMULARIO
        this.dispose();
        //LLAMAR AL OTRO FORMULARIO
        Registro cu = new Registro();
        //ESTABLECER EL FORMULARIO EN LA PANTALLA
        cu.setLocationRelativeTo(null);
        //PARA HACER VISIBLE EL FORMULARIO QUE LLAMAMOS
        cu.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        //PARA CERRAR EL FORMULARIO
        this.dispose();

// TODO add your handling code here:
    }//GEN-LAST:event_jMenu4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaParticipante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaParticipante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_participantes;
    // End of variables declaration//GEN-END:variables

}
